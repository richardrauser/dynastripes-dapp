import React from 'react';

import generateDynaStripes from '../dynastripes.js';

class AboutPage extends React.Component {

    render() {
      const randomSeed = Math.random() * 100000000000;
      const svgString = encodeURIComponent(generateDynaStripes(randomSeed, 0, 0, 0, 255, 0, 255, 20, 255));
      const svgDataUri = `url("data:image/svg+xml,${svgString}")`;

      return (
        <div className="mainContent"  style={{background: svgDataUri}}>
          <div className="content">
            <h1>About <span className="dyna">DynaStripes</span></h1>
            <div className="deepContent">
              <h3>
                  Overview
              </h3>
                  <p>
                  <span className="dyna">DynaStripes</span> is an NFT art project created by the colour-blind, colour-obsessed visual artist, <a className="externalLink volstrate" rel="noreferrer" href="http://www.volstrate.com" target="_blank">volstrate</a>, and represents the on-chain, generative evolution of volstrate's earlier explorations into NFT art. <span className="dyna">DynaStripes</span> NFTs are both <b>generative</b>, in the sense that the artwork is created programatically via the use of an algorithm, and <b>on-chain</b>, meaning that the creation algorithm, user inputs, and the artwork itself are stored directly on the Ethereum blockchain in the <span className="dyna">DynaStripes</span> smart contract. 
                  </p>

                  <h3>
                User-directed mint
                </h3>

                  <p>Minting refers to the process of immutably committing an artwork to a blockchain. Nearly all NFT art projects issue newly minted artwork in one of two ways: </p>
                  <ol>
                    <li>Blindly and pseudorandomly allow end-users to mint artwork generated during the minting process, the user only knowing what they've bought after the work has been paid for and fully minted.</li> 
                    <li>The artist generates the artwork in advance and then offers it for sale either directly, or via a minting process during which the artwork may be randomly selected, but not generated. </li>
                  </ol>
                  <p> This latter form is usually referred to as "<b>artist-directed</b>" generative art as the artist can tweak the generation algorithm and its parameters before the artwork's creation, discard poor quality work, and keep the work that has some subjective quality. Conversely, <span className="dyna">DynaStripes</span> is among the first generative, on-chain NFT art projects that is "<b>user-directed</b>," allowing end-users themselves to have control over the input parameters used in the minting process.
                  </p>

                  <h3>
                  Random seed & artwork uniqueness
                  </h3>
                  <p> The input parameters selected by the user are modulated by a random seed created on the <span className="dyna">DynaStripes</span> server. This is then injected into the smart contract along with the user-selected values in order to allow generation of the artwork. So that duplicates are prevented, the <span className="dyna">DynaStripes</span> server ensures that each random seed has never been previously used and cryptographically signs it. This signature is then verified by the smart contract to ensure that the DynaStripes server has authorised the mint, thereby ensuring that duplicate artworks are an impossibility. An unknown actor cannot submit its own random seed to the smart contract because this would be detected when the signature is analysed.
                  </p>

                  <h3>
                Royalties
                </h3>

                  <p>The <span className="dyna">DynaStripes</span> smart contract implements the newly ratified ERC-2981 royalty standard of August 2021 in an unconventional way. Most NFT creators use this standard to collect royalties for themselves in perpetuity, however <span className="dyna">DynaStripes</span> instead assigns the minter (i.e. the person who creates the work via this dApp) to be the permanent and perpetual recipient of all royalties. The royalty rate is fixed at 10% of all secondary sales.
                  </p>

              <h3>
                Artwork generation
              </h3>

                <p>
                  Each <span className="dyna">DynaStripes</span> artwork takes the form of an SVG image created using input values from the user and pseudorandom values generated from the smart contract. These user inputs are stored directly in the contract upon minting, while the pseudorandom values are derived deterministically when generating the artwork's SVG. The artwork is generated by the smart contract populating an SVG template with these values. This is done via a gas-free view operaton when the SVG is rendered by the contract. The SVG image format is a W3 open standard for scalable vector graphics, and is supported by nearly all web browsers.
                </p>

              <h3>
                Influences
              </h3>

                <p>
                  The <span className="dyna">DynaStripes</span> project has been heavily influenced by existing on-chain, generative art projects like <a className="externalLink" href="https://www.larvalabs.com/autoglyphs" target="_blank" rel="noreferrer">Autoglyphs</a>, <a className="externalLink" href="https://avastars.io/" target="_blank" rel="noreferrer">Avastars</a>, <a className="externalLink" href="https://www.artblocks.io/" target="_blank" rel="noreferrer">ArtBlocks</a>, <a className="externalLink" href="https://mandalas.eth.link/" target="_blank" rel="noreferrer">Mandalas</a> and more. There are, however, two projects in particular that have served as the strongest inspiration for <span className="dyna">DynaStripes</span>:
                  <ol>
                  <li> 
                      <a className="externalLink" href="https://tinybox.shop/" target="_blank" rel="noreferrer">TinyBoxes</a>: This "proto-generative," on-chain generative NFT project forged a new path by allowing users to select input parameters that influence the minted work.
                    </li>
                    <li> 
                    Simon de la Rouviere's <a className="externalLink" href="https://neolastics.com/" target="_blank" rel="noreferrer">Neolastics</a> and also his extensive writings, particularly this <a className="externalLink" href='https://blog.simondlr.com/posts/flavours-of-on-chain-svg-nfts-on-ethereum' target="_blank" rel="noreferrer">fascinating piece.</a>
                    </li>
                  </ol>
                    
                </p>
            </div>

            <a className="externalLink" href="mail:volstrate@gmail.com">Contact</a>
            </div>
        </div>
      );
    }
  }

export default AboutPage;